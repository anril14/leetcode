Category,Name,SolutionArray,1. Two Sum,Using hashmap with already been seen values and if difference between target value and current element has already been seen returns positions of both this numbersLinked list,2. Add Two Numbers,"Just simply adding up values of equal by number node elements, and use shortif statement for edge cases, return next element of new linked list right after dummy node"String,9. Palindrome Number,Compare first and reversed second half of string by dividing them without a traceString,14. Longest Common Prefix,First of all sort all strings by number of elements and add symbols to new string if every string contains it on this positionStack,20. Valid Parentheses,Add parenthesis to stack if it opens and remove if last element fits exit par. If stack is empty output is trueLinked list,21. Merge Two Sorted Lists,Choose between best value and add it to new linked list then move pointer of one of the lowest value list to nextArray,26. Remove Duplicates from Sorted Array,"If prev element doesn't match actual we incrementing our magic j pointer that counting all duplicates and also pointing at ""actual"" array position"Array,27. Remove Element,Use new list to store suitable variables and then assign values from new list to a given arrayLinked list,141. Linked List Cycle,Two pointers: slow and fast and if linked list is not cycled they would never met each otherStack,155. Min Stack,Use additional stack for minimal values and some default stack operationsLinked list,206. Reverse Linked List,Two pointers or recursionQueue,225. Implement Stack using Queues,Just use collections.deque libraryRecursion,509. Fibonacci Number,Simple two-branch recursionStack,682. Baseball Game,"Match, case for symbols In array and stack-like opertaions to array elements"Linked list,707. Design Linked List,Using two dummy nodes from each side for convenience and just some logic for every methodArray,1470. Shuffle the Array,Create new array and append firstly I element then I+n elementLinked list,1472. Design Browser History,Again two dummy nodes but now with one more current indicatorArray,1700. Number of Students Unable to Eat Lunch,"Calculate count of student preferences (It doesn't depend on the order) and then check match on every interation, if there is not match return sum of rest students"Array,1929. Concatenation of Array,Create new array and append all items from two given arraysSorting,912.ÊSort an Array,Merge sortingSorting,75. Sort Colors,Bucket sortingDynamic programming,70. Climbing Stairs,"Recursive like fibonacci is too slow, so use dynamic programming (temporary memoization of values)"Binary search,704.ÊBinary Search,Default binary searchBinary search,74.ÊSearch a 2D Matrix,Default binary search wrapped in cycleBinary search,240.ÊSearch a 2D Matrix II,Absolutely identical solution as 74
